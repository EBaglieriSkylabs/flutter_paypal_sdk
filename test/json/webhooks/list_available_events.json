{
  "event_types": [
    {
      "name": "PAYMENT-NETWORKS.ALTERNATIVE-PAYMENT.COMPLETED",
      "description": "Webhook event payload to send for Alternative Payment Completion.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.AUTHORIZATION.CREATED",
      "description": "A payment authorization is created, approved, executed, or a future payment authorization is created.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.AUTHORIZATION.VOIDED",
      "description": "A payment authorization is voided.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.CAPTURE.COMPLETED",
      "description": "A payment capture completes.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.CAPTURE.DENIED",
      "description": "A payment capture is denied.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.CAPTURE.PENDING",
      "description": "The state of a payment capture changes to pending.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.CAPTURE.REFUNDED",
      "description": "A merchant refunds a payment capture.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.CAPTURE.REVERSED",
      "description": "PayPal reverses a payment capture.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.ORDER.CANCELLED",
      "description": "A payment order is canceled.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.ORDER.CREATED",
      "description": "A payment order is created.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.BLOCKED",
      "description": "A payouts item was blocked.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.CANCELED",
      "description": "A payouts item is canceled.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.DENIED",
      "description": "A payouts item is denied.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.FAILED",
      "description": "A payouts item fails.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.HELD",
      "description": "A payouts item is held.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.REFUNDED",
      "description": "A payouts item is refunded.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.RETURNED",
      "description": "A payouts item is returned.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.SUCCEEDED",
      "description": "A payouts item succeeds.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.UNCLAIMED",
      "description": "A payouts item is unclaimed.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.PAYOUTSBATCH.DENIED",
      "description": "A batch payout payment is denied.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.PAYOUTSBATCH.PROCESSING",
      "description": "The state of a batch payout payment changes to processing.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.PAYOUTSBATCH.SUCCESS",
      "description": "A batch payout payment completes successfully.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.REFUND.COMPLETED",
      "description": "This event is triggered when merchant does non referenced credit.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.SALE.COMPLETED",
      "description": "A sale completes.",
      "status": "ENABLED"
    },
    {
      "name": "BILLING.PLAN.ACTIVATED",
      "description": "A billing plan is activated.",
      "status": "ENABLED"
    },
    {
      "name": "BILLING.PLAN.CREATED",
      "description": "A billing plan is created.",
      "status": "ENABLED"
    },
    {
      "name": "BILLING.PLAN.DEACTIVATED",
      "description": "A billing plan is deactivated.",
      "status": "ENABLED"
    },
    {
      "name": "BILLING.PLAN.PRICING-CHANGE.ACTIVATED",
      "description": "A billing plan pricing change is activated.",
      "status": "ENABLED"
    },
    {
      "name": "BILLING.PLAN.PRICING-CHANGE.INPROGRESS",
      "description": "A billing plan pricing change is being processed.",
      "status": "ENABLED"
    },
    {
      "name": "BILLING.PLAN.UPDATED",
      "description": "A billing plan is updated.",
      "status": "ENABLED"
    },
    {
      "name": "BILLING.SUBSCRIPTION.ACTIVATED",
      "description": "A billing agreement is activated.",
      "status": "ENABLED"
    },
    {
      "name": "BILLING.SUBSCRIPTION.CANCELLED",
      "description": "A billing agreement is canceled.",
      "status": "ENABLED"
    },
    {
      "name": "BILLING.SUBSCRIPTION.CREATED",
      "description": "A billing agreement is created.",
      "status": "ENABLED"
    },
    {
      "name": "BILLING.SUBSCRIPTION.EXPIRED",
      "description": "A billing agreement is expired.",
      "status": "ENABLED"
    },
    {
      "name": "BILLING.SUBSCRIPTION.PAYMENT.FAILED",
      "description": "Subscription payment failure will trigger this webhook event.",
      "status": "ENABLED"
    },
    {
      "name": "BILLING.SUBSCRIPTION.RE-ACTIVATED",
      "description": "A billing agreement is re-activated.",
      "status": "ENABLED"
    },
    {
      "name": "BILLING.SUBSCRIPTION.RENEWED",
      "description": "A billing agreement is renewed.",
      "status": "ENABLED"
    },
    {
      "name": "BILLING.SUBSCRIPTION.SUSPENDED",
      "description": "A billing agreement is suspended.",
      "status": "ENABLED"
    },
    {
      "name": "BILLING.SUBSCRIPTION.UPDATED",
      "description": "A billing agreement is updated.",
      "status": "ENABLED"
    },
    {
      "name": "CATALOG.PRODUCT.CREATED",
      "description": "Product created",
      "status": "ENABLED"
    },
    {
      "name": "CATALOG.PRODUCT.UPDATED",
      "description": "Product updated",
      "status": "ENABLED"
    },
    {
      "name": "CHECKOUT.CHECKOUT.BUYER-APPROVED",
      "description": "Express checkout payment is created and approved by buyer.",
      "status": "ENABLED"
    },
    {
      "name": "CHECKOUT.ORDER.APPROVED",
      "description": "An order has been approved by buyer.",
      "status": "ENABLED"
    },
    {
      "name": "CHECKOUT.ORDER.COMPLETED",
      "description": "Webhook event emitted after all the purchase_units have been processed",
      "status": "ENABLED"
    },
    {
      "name": "CHECKOUT.ORDER.SAVED",
      "description": "This event is triggered as AS2 Order is saved.",
      "status": "ENABLED"
    },
    {
      "name": "CHECKOUT.ORDER.VOIDED",
      "description": "This event is triggered as AS2 Order is voided.",
      "status": "ENABLED"
    },
    {
      "name": "COLLECTION.ACTIVITY.EXECUTED",
      "description": "The webhook event that is triggered when an activity ( notification or placement ) happens on a delinquency",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.MANAGED-ACCOUNT.RISK-ASSESSED",
      "description": "Webhook event emitted after the account has been risk assessed or the risk assessment of the account has been changed.",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.MANAGED-ACCOUNT.UPDATED",
      "description": "Webhook event emitted after the non-loginable account have been updated.",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.CAPABILITY-UPDATED",
      "description": "This event is triggered as a notification for capability change.",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.PRODUCT-SUBSCRIPTION-UPDATED",
      "description": "This event is triggered as a notification for production subscription status change.",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.SELLER-ALREADY-INTEGRATED",
      "description": "This event is triggered as a notification for when seller goes through ISU flow but is already fully integrated with partner.",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.SELLER-CONSENT-GRANTED",
      "description": "This event is triggered as a notification for when seller grants the requested consents to partner.",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.SELLER-EMAIL-CONFIRMED",
      "description": "This event is triggered as a notification for when seller confirms email.",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.SELLER-ERROR-BAD-REQUEST",
      "description": "This event is triggered as flow starts by merchant",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.SELLER-ERROR-INTERNAL-SERVER-ERROR",
      "description": "This event is triggered as flow starts by merchant",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.SELLER-ONBOARDING-INITIATED",
      "description": "This event is triggered as a notification for when seller starts to create an account through partner flow.",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.SELLER-ONBOARDING-STARTED",
      "description": "This event is triggered as flow starts by merchant",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.PARTNER-FINANCIAL-ACCOUNT.DEBITED",
      "description": "This event is triggered for partner account debit.",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.PAYOUT.COMPLETED",
      "description": "The webhook event payload for the `CUSTOMER.PAYOUT.COMPLETED` event.",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.PAYOUT.FAILED",
      "description": "The webhook event payload for the `CUSTOMER.PAYOUTS.FAILED` event.",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.USER-PROFILE.PASSWORD-CHANGED",
      "description": "The webhook event that is triggered as a result of a password change",
      "status": "ENABLED"
    },
    {
      "name": "IDENTITY.AUTHORIZATION-CONSENT.GRANTED",
      "description": "Webhook event that is triggered When end user grants permissions to third party applications",
      "status": "ENABLED"
    },
    {
      "name": "IDENTITY.AUTHORIZATION-CONSENT.REVOKED",
      "description": "User consents for merchant were revoked.",
      "status": "ENABLED"
    },
    {
      "name": "INVOICING.INVOICE.CANCELLED",
      "description": "A merchant or customer cancels an invoice.",
      "status": "ENABLED"
    },
    {
      "name": "INVOICING.INVOICE.CREATED",
      "description": "An invoice is created.",
      "status": "ENABLED"
    },
    {
      "name": "INVOICING.INVOICE.PAID",
      "description": "An invoice is paid, partially paid, or payment is made and is pending.",
      "status": "ENABLED"
    },
    {
      "name": "INVOICING.INVOICE.REFUNDED",
      "description": "An invoice is refunded or partially refunded.",
      "status": "ENABLED"
    },
    {
      "name": "INVOICING.INVOICE.SCHEDULED",
      "description": "An invoice is scheduled.",
      "status": "ENABLED"
    },
    {
      "name": "INVOICING.INVOICE.UPDATED",
      "description": "An invoice is updated.",
      "status": "ENABLED"
    },
    {
      "name": "MERCHANT.ONBOARDING.COMPLETED",
      "description": "A merchant completes setup.",
      "status": "ENABLED"
    },
    {
      "name": "MERCHANT.PARTNER-CONSENT.REVOKED",
      "description": "The consents for a merchant account setup are revoked or an account is closed.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.SALE.DENIED",
      "description": "The state of a sale changes from pending to denied.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.SALE.PENDING",
      "description": "The state of a sale changes to pending.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.SALE.REFUNDED",
      "description": "A merchant refunds a sale.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT.SALE.REVERSED",
      "description": "PayPal reverses a sale.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENTS.PAYMENT.CREATED",
      "description": "Checkout payment is created and approved by buyer.",
      "status": "ENABLED"
    },
    {
      "name": "PAYMENT_NETWORKS.INSTRUMENT.LINKED-ACCOUNT-UPDATED",
      "description": "Webhook event emitted after an instrument was successfully added from the banking partner..",
      "status": "ENABLED"
    },
    {
      "name": "TAXES.REPORTS.DELIVERED",
      "description": "This event is triggered when report delivery is completed",
      "status": "ENABLED"
    },
    {
      "name": "TAXES.REPORTS.GENERATED",
      "description": "This event is triggered when report generation completed",
      "status": "ENABLED"
    },
    {
      "name": "VAULT.CREDIT-CARD.CREATED",
      "description": "A credit card is created.",
      "status": "ENABLED"
    },
    {
      "name": "VAULT.CREDIT-CARD.DELETED",
      "description": "A credit card is deleted.",
      "status": "ENABLED"
    },
    {
      "name": "VAULT.CREDIT-CARD.UPDATED",
      "description": "A credit card is updated.",
      "status": "ENABLED"
    },
    {
      "name": "VAULT.PAYMENT-TOKEN.CREATED",
      "description": "This webhook is triggered after a Payment Token has been created.",
      "status": "ENABLED"
    },
    {
      "name": "VAULT.PAYMENT-TOKEN.DELETED",
      "description": "This webhook is triggered on successful deletion of a payment token.",
      "status": "ENABLED"
    },
    {
      "name": "VAULT.PAYMENT-TOKEN.DELETION-INITIATED",
      "description": "This webhook is triggered when the deletion of payment method token is initiated. This is currently triggered for PayPal use cases.",
      "status": "ENABLED"
    },
    {
      "name": "COMPLIANCE.PROCESS.AGENT-ACTION-INITIATED",
      "description": "The webhook event that is triggered when process state is changed to Manual Review.",
      "status": "ENABLED"
    },
    {
      "name": "COMPLIANCE.PROCESS.COMPLETED",
      "description": "The webhook event that is triggered when process status is Completed.",
      "status": "ENABLED"
    },
    {
      "name": "COMPLIANCE.PROCESS.END-USER-ACTION-REQUIRED",
      "description": "The webhook event that is triggered when process status is Need More Data.",
      "status": "ENABLED"
    },
    {
      "name": "COMPLIANCE.PROCESS.EXEMPTED",
      "description": "The webhook event that is triggered when process status is Exempted.",
      "status": "ENABLED"
    },
    {
      "name": "COMPLIANCE.PROCESS.FAILED",
      "description": "The webhook event that is triggered when process status is Failed.",
      "status": "ENABLED"
    },
    {
      "name": "COMPLIANCE.PROCESS.NOT-APPLIED",
      "description": "The webhook event that is triggered when process status is Not Applicable.",
      "status": "ENABLED"
    },
    {
      "name": "COMPLIANCE.PROCESS.SYSTEM-ACTION-INITIATED",
      "description": "The webhook event that is triggered when process status is Pending System Processing.",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER-SUPPORT.CHARGEBACK.DECISION-RESPONDED",
      "description": "This event is triggered as response notification for a chargeback.",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.DISPUTE.CREATED",
      "description": "A customer dispute is created.",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.DISPUTE.RESOLVED",
      "description": "A customer dispute is resolved.",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.DISPUTE.UPDATED",
      "description": "A customer dispute is updated.",
      "status": "ENABLED"
    },
    {
      "name": "CUSTOMER.MANAGED-ACCOUNT.CREATED",
      "description": "Webhook event emitted after the non-loginable account have been created.",
      "status": "ENABLED"
    }
  ]
}